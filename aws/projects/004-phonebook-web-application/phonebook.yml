AWSTemplateFormatVersion: 2010-09-09
Description: |
  The Phonebook Application aims to create a phonebook application 
  in Python and deployed as a web application with Flask on AWS 
  Application Load Balancer with Auto Scaling Group of Elastic 
  Compute Cloud (EC2) Instances and Relational Database Service(RDS)
  using AWS Cloudformation Service.
  
Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80, SSH access and MySQL/Aurora   
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0        
        - IpProtocol: '-1'
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  RDSSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress: #required
        - EC2SecurityGroupName: 
            Ref: WebServerSecurityGroup
      GroupDescription: DataBasaSecurityGroup #required
  
  WebServerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData: 
        ImageId: ami-0947d2ba12ee1ff75
        InstanceType: t2.micro
        KeyName: testkeya
        SecurityGroupIds: 
          - !GetAtt WebServerSecurityGroup.GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName} 
        UserData: 
          Fn::Base64:
            !Sub |
              #! /bin/bash
              
              yum update -y
              yum install python3 -y
              pip3 install flask
              pip3 install flask-sqlalchemy             
              pip3 install flask-mysql

              cd /home/ec2-user
              echo "${RDSinstance.Endpoint.Address}" >> dbserver.endpoint
              
              mkdir templates
              cd templates 
              wget https://raw.githubusercontent.com/E2028-Hamza/clarusway-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/templates/index.html
              wget https://raw.githubusercontent.com/E2028-Hamza/clarusway-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/templates/add-update.html
              wget https://raw.githubusercontent.com/E2028-Hamza/clarusway-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/templates/delete.html
              
              cd ..
              wget https://raw.githubusercontent.com/E2028-Hamza/clarusway-aws-devops-workshop/master/aws/projects/004-phonebook-web-application/phonebook-app.py
              
              sudo python3 phonebook-app.py

  WebServerTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !GetAtt WebServerSecurityGroup.VpcId

  ApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId
      Subnets:
        - subnet-cba00d94
        - subnet-25532368
        - subnet-f106a797
        - subnet-479e0449
        - subnet-7a14e04b
        - subnet-0e943b2f
      Type: application

  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: #required
        - TargetGroupArn: !Ref WebServerTargetGroup
          Type: forward
      LoadBalancerArn: !Ref ApplicationLoadBalancer #required
      Port: 80 #required
      Protocol: HTTP #requiredâ€‹

  WebServerASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones:
        !GetAZs
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateId: !Ref WebServerLaunchTemplate
        Version: !GetAtt WebServerLaunchTemplate.LatestVersionNumber
      MaxSize: 3 #required
      MinSize: 1 #required
      TargetGroupARNs:
        - !Ref WebServerTargetGroup

  RDSinstance:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: "20"
      BackupRetentionPeriod: 7
      DBInstanceClass: db.t2.micro #required
      DBInstanceIdentifier: phonebookdatabase
      DBName: phonebookDB
      DBSecurityGroups: 
        - !Ref RDSSecurityGroup
      #DeleteAutomatedBackups: true
      #DeletionProtection: true
      Engine: mysql
      EngineVersion: "8.0.19"     
      MasterUserPassword: "Pl123456"
      MasterUsername: "admin"
      Port: "3306"
      #PreferredBackupWindow: "01:00-02.00"
      #PreferredMaintenanceWindow: "mon:03:00-mon:04.00"
      PubliclyAccessible: True
    
Outputs:
  WebsiteURL:
    Description: Phonebook Application Load Balancer URL
    Value: !Sub 
      - http://${ALBaddress}
      - ALBaddress: !GetAtt ApplicationLoadBalancer.DNSName
  RDSendpoint:
    Description: Phonebook DB endpoint
    Value: !Ref RDSinstance